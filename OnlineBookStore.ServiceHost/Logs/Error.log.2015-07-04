2015-07-04 16:30:18,203 ERROR NHibernate.AdoNet.AbstractBatcher:
      Could not execute query: INSERT INTO Orders (OrderDate, ShippingDetailId) VALUES (@p0, @p1); select SCOPE_IDENTITY()
System.Data.SqlTypes.SqlTypeException: Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
   w System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)
   w System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   w System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   w NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
2015-07-04 16:30:18,265 ERROR OnlineBookStoreLogger:
      Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
System.Data.SqlTypes.SqlTypeException: Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
   w System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)
   w System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   w System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   w NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   w NHibernate.Id.IdentityGenerator.InsertSelectDelegate.ExecuteAndExtract(IDbCommand insert, ISessionImplementor session)
   w NHibernate.Id.Insert.AbstractReturningDelegate.PerformInsert(SqlCommandInfo insertSQL, ISessionImplementor session, IBinder binder)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Boolean[] notNull, SqlCommandInfo sql, Object obj, ISessionImplementor session)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Object obj, ISessionImplementor session)
   w NHibernate.Action.EntityIdentityInsertAction.Execute()
   w NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSaveOrReplicate(Object entity, EntityKey key, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSave(Object entity, Object id, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.SaveWithGeneratedId(Object entity, String entityName, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.SaveWithGeneratedOrRequestedId(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.EntityIsTransient(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.OnSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.FireSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.SaveOrUpdate(Object obj)
   w OnlineBookStore.DAL.Repository.Logic.Repository.SaveOrUpdate(Object obj) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.DAL\Repository\Logic\Repository.cs:wiersz 34
   w OnlineBookStore.Services.Services.OnlineBookStoreService.SaveOrder(SaveOrderRequest request) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.Services\Services\OnlineBookStoreService.cs:wiersz 107
   w (Object , Object[] )
   w Ninject.Extensions.Interception.Injection.Dynamic.DynamicMethodInjector.Invoke(Object target, Object[] arguments)
   w Ninject.Extensions.Interception.Invocation.Invocation.CallTargetMethod()
   w Ninject.Extensions.Interception.Invocation.InvocationBase.Proceed()
   w OnlineBookStore.ServiceHost.Infrastructure.ServiceInterceptor.Intercept(IInvocation invocation) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.ServiceHost\Infrastructure\ServiceInterceptor.cs:wiersz 47
2015-07-04 16:30:18,265 ERROR OnlineBookStoreLogger:
      Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
System.Data.SqlTypes.SqlTypeException: Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
   w System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)
   w System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   w System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   w NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   w NHibernate.Id.IdentityGenerator.InsertSelectDelegate.ExecuteAndExtract(IDbCommand insert, ISessionImplementor session)
   w NHibernate.Id.Insert.AbstractReturningDelegate.PerformInsert(SqlCommandInfo insertSQL, ISessionImplementor session, IBinder binder)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Boolean[] notNull, SqlCommandInfo sql, Object obj, ISessionImplementor session)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Object obj, ISessionImplementor session)
   w NHibernate.Action.EntityIdentityInsertAction.Execute()
   w NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSaveOrReplicate(Object entity, EntityKey key, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSave(Object entity, Object id, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.SaveWithGeneratedId(Object entity, String entityName, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.SaveWithGeneratedOrRequestedId(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.EntityIsTransient(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.OnSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.FireSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.SaveOrUpdate(Object obj)
   w OnlineBookStore.DAL.Repository.Logic.Repository.SaveOrUpdate(Object obj) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.DAL\Repository\Logic\Repository.cs:wiersz 34
   w OnlineBookStore.Services.Services.OnlineBookStoreService.SaveOrder(SaveOrderRequest request) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.Services\Services\OnlineBookStoreService.cs:wiersz 107
   w (Object , Object[] )
   w Ninject.Extensions.Interception.Injection.Dynamic.DynamicMethodInjector.Invoke(Object target, Object[] arguments)
   w Ninject.Extensions.Interception.Invocation.Invocation.CallTargetMethod()
   w Ninject.Extensions.Interception.Invocation.InvocationBase.Proceed()
   w OnlineBookStore.ServiceHost.Infrastructure.ServiceInterceptor.Intercept(IInvocation invocation) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.ServiceHost\Infrastructure\ServiceInterceptor.cs:wiersz 47
2015-07-04 16:37:08,109 ERROR NHibernate.AdoNet.AbstractBatcher:
      Could not execute query: INSERT INTO Orders (OrderDate, ShippingDetailId) VALUES (@p0, @p1); select SCOPE_IDENTITY()
System.Data.SqlTypes.SqlTypeException: Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
   w System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)
   w System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   w System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   w NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
2015-07-04 16:37:08,110 ERROR OnlineBookStoreLogger:
      Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
System.Data.SqlTypes.SqlTypeException: Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
   w System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)
   w System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   w System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   w NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   w NHibernate.Id.IdentityGenerator.InsertSelectDelegate.ExecuteAndExtract(IDbCommand insert, ISessionImplementor session)
   w NHibernate.Id.Insert.AbstractReturningDelegate.PerformInsert(SqlCommandInfo insertSQL, ISessionImplementor session, IBinder binder)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Boolean[] notNull, SqlCommandInfo sql, Object obj, ISessionImplementor session)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Object obj, ISessionImplementor session)
   w NHibernate.Action.EntityIdentityInsertAction.Execute()
   w NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSaveOrReplicate(Object entity, EntityKey key, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSave(Object entity, Object id, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.SaveWithGeneratedId(Object entity, String entityName, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.SaveWithGeneratedOrRequestedId(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.EntityIsTransient(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.OnSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.FireSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.SaveOrUpdate(Object obj)
   w OnlineBookStore.DAL.Repository.Logic.Repository.SaveOrUpdate(Object obj) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.DAL\Repository\Logic\Repository.cs:wiersz 34
   w OnlineBookStore.Services.Services.OnlineBookStoreService.SaveOrder(SaveOrderRequest request) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.Services\Services\OnlineBookStoreService.cs:wiersz 107
   w (Object , Object[] )
   w Ninject.Extensions.Interception.Injection.Dynamic.DynamicMethodInjector.Invoke(Object target, Object[] arguments)
   w Ninject.Extensions.Interception.Invocation.Invocation.CallTargetMethod()
   w Ninject.Extensions.Interception.Invocation.InvocationBase.Proceed()
   w OnlineBookStore.ServiceHost.Infrastructure.ServiceInterceptor.Intercept(IInvocation invocation) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.ServiceHost\Infrastructure\ServiceInterceptor.cs:wiersz 47
2015-07-04 16:37:08,110 ERROR OnlineBookStoreLogger:
      Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
System.Data.SqlTypes.SqlTypeException: Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
   w System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)
   w System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   w System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   w NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   w NHibernate.Id.IdentityGenerator.InsertSelectDelegate.ExecuteAndExtract(IDbCommand insert, ISessionImplementor session)
   w NHibernate.Id.Insert.AbstractReturningDelegate.PerformInsert(SqlCommandInfo insertSQL, ISessionImplementor session, IBinder binder)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Boolean[] notNull, SqlCommandInfo sql, Object obj, ISessionImplementor session)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Object obj, ISessionImplementor session)
   w NHibernate.Action.EntityIdentityInsertAction.Execute()
   w NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSaveOrReplicate(Object entity, EntityKey key, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSave(Object entity, Object id, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.SaveWithGeneratedId(Object entity, String entityName, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.SaveWithGeneratedOrRequestedId(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.EntityIsTransient(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.OnSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.FireSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.SaveOrUpdate(Object obj)
   w OnlineBookStore.DAL.Repository.Logic.Repository.SaveOrUpdate(Object obj) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.DAL\Repository\Logic\Repository.cs:wiersz 34
   w OnlineBookStore.Services.Services.OnlineBookStoreService.SaveOrder(SaveOrderRequest request) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.Services\Services\OnlineBookStoreService.cs:wiersz 107
   w (Object , Object[] )
   w Ninject.Extensions.Interception.Injection.Dynamic.DynamicMethodInjector.Invoke(Object target, Object[] arguments)
   w Ninject.Extensions.Interception.Invocation.Invocation.CallTargetMethod()
   w Ninject.Extensions.Interception.Invocation.InvocationBase.Proceed()
   w OnlineBookStore.ServiceHost.Infrastructure.ServiceInterceptor.Intercept(IInvocation invocation) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.ServiceHost\Infrastructure\ServiceInterceptor.cs:wiersz 47
2015-07-04 16:41:01,928 ERROR NHibernate.AdoNet.AbstractBatcher:
      Could not execute query: INSERT INTO Orders (OrderDate, ShippingDetailId) VALUES (@p0, @p1); select SCOPE_IDENTITY()
System.Data.SqlTypes.SqlTypeException: Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
   w System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)
   w System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   w System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   w NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
2015-07-04 16:47:29,853 ERROR OnlineBookStoreLogger:
      Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
System.Data.SqlTypes.SqlTypeException: Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
   w System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)
   w System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   w System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   w NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   w NHibernate.Id.IdentityGenerator.InsertSelectDelegate.ExecuteAndExtract(IDbCommand insert, ISessionImplementor session)
   w NHibernate.Id.Insert.AbstractReturningDelegate.PerformInsert(SqlCommandInfo insertSQL, ISessionImplementor session, IBinder binder)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Boolean[] notNull, SqlCommandInfo sql, Object obj, ISessionImplementor session)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Object obj, ISessionImplementor session)
   w NHibernate.Action.EntityIdentityInsertAction.Execute()
   w NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSaveOrReplicate(Object entity, EntityKey key, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSave(Object entity, Object id, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.SaveWithGeneratedId(Object entity, String entityName, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.SaveWithGeneratedOrRequestedId(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.EntityIsTransient(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.OnSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.FireSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.SaveOrUpdate(Object obj)
   w OnlineBookStore.DAL.Repository.Logic.Repository.SaveOrUpdate(Object obj) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.DAL\Repository\Logic\Repository.cs:wiersz 34
   w OnlineBookStore.Services.Services.OnlineBookStoreService.SaveOrder(SaveOrderRequest request) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.Services\Services\OnlineBookStoreService.cs:wiersz 107
   w (Object , Object[] )
   w Ninject.Extensions.Interception.Injection.Dynamic.DynamicMethodInjector.Invoke(Object target, Object[] arguments)
   w Ninject.Extensions.Interception.Invocation.Invocation.CallTargetMethod()
   w Ninject.Extensions.Interception.Invocation.InvocationBase.Proceed()
   w OnlineBookStore.ServiceHost.Infrastructure.ServiceInterceptor.Intercept(IInvocation invocation) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.ServiceHost\Infrastructure\ServiceInterceptor.cs:wiersz 47
2015-07-04 16:47:29,853 ERROR OnlineBookStoreLogger:
      Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
System.Data.SqlTypes.SqlTypeException: Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
   w System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)
   w System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   w System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   w NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   w NHibernate.Id.IdentityGenerator.InsertSelectDelegate.ExecuteAndExtract(IDbCommand insert, ISessionImplementor session)
   w NHibernate.Id.Insert.AbstractReturningDelegate.PerformInsert(SqlCommandInfo insertSQL, ISessionImplementor session, IBinder binder)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Boolean[] notNull, SqlCommandInfo sql, Object obj, ISessionImplementor session)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Object obj, ISessionImplementor session)
   w NHibernate.Action.EntityIdentityInsertAction.Execute()
   w NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSaveOrReplicate(Object entity, EntityKey key, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSave(Object entity, Object id, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.SaveWithGeneratedId(Object entity, String entityName, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.SaveWithGeneratedOrRequestedId(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.EntityIsTransient(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.OnSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.FireSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.SaveOrUpdate(Object obj)
   w OnlineBookStore.DAL.Repository.Logic.Repository.SaveOrUpdate(Object obj) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.DAL\Repository\Logic\Repository.cs:wiersz 34
   w OnlineBookStore.Services.Services.OnlineBookStoreService.SaveOrder(SaveOrderRequest request) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.Services\Services\OnlineBookStoreService.cs:wiersz 107
   w (Object , Object[] )
   w Ninject.Extensions.Interception.Injection.Dynamic.DynamicMethodInjector.Invoke(Object target, Object[] arguments)
   w Ninject.Extensions.Interception.Invocation.Invocation.CallTargetMethod()
   w Ninject.Extensions.Interception.Invocation.InvocationBase.Proceed()
   w OnlineBookStore.ServiceHost.Infrastructure.ServiceInterceptor.Intercept(IInvocation invocation) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.ServiceHost\Infrastructure\ServiceInterceptor.cs:wiersz 47
2015-07-04 16:55:14,968 ERROR NHibernate.AdoNet.AbstractBatcher:
      Could not execute query: INSERT INTO Orders (OrderDate, ShippingDetailId) VALUES (@p0, @p1); select SCOPE_IDENTITY()
System.Data.SqlTypes.SqlTypeException: Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
   w System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)
   w System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   w System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   w NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
2015-07-04 16:55:14,968 ERROR OnlineBookStoreLogger:
      Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
System.Data.SqlTypes.SqlTypeException: Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
   w System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)
   w System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   w System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   w NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   w NHibernate.Id.IdentityGenerator.InsertSelectDelegate.ExecuteAndExtract(IDbCommand insert, ISessionImplementor session)
   w NHibernate.Id.Insert.AbstractReturningDelegate.PerformInsert(SqlCommandInfo insertSQL, ISessionImplementor session, IBinder binder)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Boolean[] notNull, SqlCommandInfo sql, Object obj, ISessionImplementor session)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Object obj, ISessionImplementor session)
   w NHibernate.Action.EntityIdentityInsertAction.Execute()
   w NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSaveOrReplicate(Object entity, EntityKey key, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSave(Object entity, Object id, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.SaveWithGeneratedId(Object entity, String entityName, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.SaveWithGeneratedOrRequestedId(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.EntityIsTransient(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.OnSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.FireSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.SaveOrUpdate(Object obj)
   w OnlineBookStore.DAL.Repository.Logic.Repository.SaveOrUpdate(Object obj) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.DAL\Repository\Logic\Repository.cs:wiersz 34
   w OnlineBookStore.Services.Services.OnlineBookStoreService.SaveOrder(SaveOrderRequest request) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.Services\Services\OnlineBookStoreService.cs:wiersz 107
   w (Object , Object[] )
   w Ninject.Extensions.Interception.Injection.Dynamic.DynamicMethodInjector.Invoke(Object target, Object[] arguments)
   w Ninject.Extensions.Interception.Invocation.Invocation.CallTargetMethod()
   w Ninject.Extensions.Interception.Invocation.InvocationBase.Proceed()
   w OnlineBookStore.ServiceHost.Infrastructure.ServiceInterceptor.Intercept(IInvocation invocation) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.ServiceHost\Infrastructure\ServiceInterceptor.cs:wiersz 47
2015-07-04 16:55:14,968 ERROR OnlineBookStoreLogger:
      Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
System.Data.SqlTypes.SqlTypeException: Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
   w System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)
   w System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   w System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   w NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   w NHibernate.Id.IdentityGenerator.InsertSelectDelegate.ExecuteAndExtract(IDbCommand insert, ISessionImplementor session)
   w NHibernate.Id.Insert.AbstractReturningDelegate.PerformInsert(SqlCommandInfo insertSQL, ISessionImplementor session, IBinder binder)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Boolean[] notNull, SqlCommandInfo sql, Object obj, ISessionImplementor session)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Object obj, ISessionImplementor session)
   w NHibernate.Action.EntityIdentityInsertAction.Execute()
   w NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSaveOrReplicate(Object entity, EntityKey key, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSave(Object entity, Object id, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.SaveWithGeneratedId(Object entity, String entityName, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.SaveWithGeneratedOrRequestedId(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.EntityIsTransient(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.OnSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.FireSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.SaveOrUpdate(Object obj)
   w OnlineBookStore.DAL.Repository.Logic.Repository.SaveOrUpdate(Object obj) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.DAL\Repository\Logic\Repository.cs:wiersz 34
   w OnlineBookStore.Services.Services.OnlineBookStoreService.SaveOrder(SaveOrderRequest request) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.Services\Services\OnlineBookStoreService.cs:wiersz 107
   w (Object , Object[] )
   w Ninject.Extensions.Interception.Injection.Dynamic.DynamicMethodInjector.Invoke(Object target, Object[] arguments)
   w Ninject.Extensions.Interception.Invocation.Invocation.CallTargetMethod()
   w Ninject.Extensions.Interception.Invocation.InvocationBase.Proceed()
   w OnlineBookStore.ServiceHost.Infrastructure.ServiceInterceptor.Intercept(IInvocation invocation) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.ServiceHost\Infrastructure\ServiceInterceptor.cs:wiersz 47
2015-07-04 17:09:20,895 ERROR NHibernate.AdoNet.AbstractBatcher:
      Could not execute query: INSERT INTO Orders (OrderDate, ShippingDetailId) VALUES (@p0, @p1); select SCOPE_IDENTITY()
System.Data.SqlTypes.SqlTypeException: Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
   w System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)
   w System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   w System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   w NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
2015-07-04 17:09:20,915 ERROR OnlineBookStoreLogger:
      Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
System.Data.SqlTypes.SqlTypeException: Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
   w System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)
   w System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   w System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   w NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   w NHibernate.Id.IdentityGenerator.InsertSelectDelegate.ExecuteAndExtract(IDbCommand insert, ISessionImplementor session)
   w NHibernate.Id.Insert.AbstractReturningDelegate.PerformInsert(SqlCommandInfo insertSQL, ISessionImplementor session, IBinder binder)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Boolean[] notNull, SqlCommandInfo sql, Object obj, ISessionImplementor session)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Object obj, ISessionImplementor session)
   w NHibernate.Action.EntityIdentityInsertAction.Execute()
   w NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSaveOrReplicate(Object entity, EntityKey key, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSave(Object entity, Object id, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.SaveWithGeneratedId(Object entity, String entityName, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.SaveWithGeneratedOrRequestedId(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.EntityIsTransient(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.OnSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.FireSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.SaveOrUpdate(Object obj)
   w OnlineBookStore.DAL.Repository.Logic.Repository.SaveOrUpdate(Object obj) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.DAL\Repository\Logic\Repository.cs:wiersz 34
   w OnlineBookStore.Services.Services.OnlineBookStoreService.SaveOrder(SaveOrderRequest request) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.Services\Services\OnlineBookStoreService.cs:wiersz 107
   w (Object , Object[] )
   w Ninject.Extensions.Interception.Injection.Dynamic.DynamicMethodInjector.Invoke(Object target, Object[] arguments)
   w Ninject.Extensions.Interception.Invocation.Invocation.CallTargetMethod()
   w Ninject.Extensions.Interception.Invocation.InvocationBase.Proceed()
   w OnlineBookStore.ServiceHost.Infrastructure.ServiceInterceptor.Intercept(IInvocation invocation) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.ServiceHost\Infrastructure\ServiceInterceptor.cs:wiersz 47
2015-07-04 17:09:20,915 ERROR OnlineBookStoreLogger:
      Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
System.Data.SqlTypes.SqlTypeException: Przepe³nienie elementu SqlDateTime. Musi on byæ pomiêdzy 1/1/1753 12:00:00 AM a 12/31/9999 11:59:59 PM.
   w System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)
   w System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite)
   w System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   w System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   w System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   w NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   w NHibernate.Id.IdentityGenerator.InsertSelectDelegate.ExecuteAndExtract(IDbCommand insert, ISessionImplementor session)
   w NHibernate.Id.Insert.AbstractReturningDelegate.PerformInsert(SqlCommandInfo insertSQL, ISessionImplementor session, IBinder binder)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Boolean[] notNull, SqlCommandInfo sql, Object obj, ISessionImplementor session)
   w NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Object obj, ISessionImplementor session)
   w NHibernate.Action.EntityIdentityInsertAction.Execute()
   w NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSaveOrReplicate(Object entity, EntityKey key, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.PerformSave(Object entity, Object id, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.AbstractSaveEventListener.SaveWithGeneratedId(Object entity, String entityName, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.SaveWithGeneratedOrRequestedId(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.EntityIsTransient(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.OnSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.FireSaveOrUpdate(SaveOrUpdateEvent event)
   w NHibernate.Impl.SessionImpl.SaveOrUpdate(Object obj)
   w OnlineBookStore.DAL.Repository.Logic.Repository.SaveOrUpdate(Object obj) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.DAL\Repository\Logic\Repository.cs:wiersz 34
   w OnlineBookStore.Services.Services.OnlineBookStoreService.SaveOrder(SaveOrderRequest request) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.Services\Services\OnlineBookStoreService.cs:wiersz 107
   w (Object , Object[] )
   w Ninject.Extensions.Interception.Injection.Dynamic.DynamicMethodInjector.Invoke(Object target, Object[] arguments)
   w Ninject.Extensions.Interception.Invocation.Invocation.CallTargetMethod()
   w Ninject.Extensions.Interception.Invocation.InvocationBase.Proceed()
   w OnlineBookStore.ServiceHost.Infrastructure.ServiceInterceptor.Intercept(IInvocation invocation) w c:\Projects\Workspace\OnlineBookStore\OnlineBookStore.ServiceHost\Infrastructure\ServiceInterceptor.cs:wiersz 47
2015-07-04 17:34:03,346 ERROR NHibernate.Transaction.ITransactionFactory:
      DTC transaction prepare phase failed
NHibernate.TransientObjectException: object references an unsaved transient instance - save the transient instance before flushing or set cascade action for the property to something that would make it autosave. Type: OnlineBookStore.DAL.Entities.ShippingDetail, Entity: OnlineBookStore.DAL.Entities.ShippingDetail
   w NHibernate.Engine.ForeignKeys.GetEntityIdentifierIfNotUnsaved(String entityName, Object entity, ISessionImplementor session)
   w NHibernate.Type.EntityType.GetIdentifier(Object value, ISessionImplementor session)
   w NHibernate.Type.ManyToOneType.IsDirty(Object old, Object current, Boolean[] checkable, ISessionImplementor session)
   w NHibernate.Type.TypeHelper.Dirty(StandardProperty[] properties, Object[] currentState, Object[] previousState, Boolean[][] includeColumns, Boolean anyUninitializedProperties, ISessionImplementor session, Int32 i)
   w NHibernate.Type.TypeHelper.FindDirty(StandardProperty[] properties, Object[] currentState, Object[] previousState, Boolean[][] includeColumns, Boolean anyUninitializedProperties, ISessionImplementor session)
   w NHibernate.Persister.Entity.AbstractEntityPersister.FindDirty(Object[] currentState, Object[] previousState, Object entity, ISessionImplementor session)
   w NHibernate.Event.Default.DefaultFlushEntityEventListener.DirtyCheck(FlushEntityEvent event)
   w NHibernate.Event.Default.DefaultFlushEntityEventListener.IsUpdateNecessary(FlushEntityEvent event, Boolean mightBeDirty)
   w NHibernate.Event.Default.DefaultFlushEntityEventListener.OnFlushEntity(FlushEntityEvent event)
   w NHibernate.Event.Default.AbstractFlushingEventListener.FlushEntities(FlushEvent event)
   w NHibernate.Event.Default.AbstractFlushingEventListener.FlushEverythingToExecutions(FlushEvent event)
   w NHibernate.Event.Default.DefaultFlushEventListener.OnFlush(FlushEvent event)
   w NHibernate.Impl.SessionImpl.Flush()
   w NHibernate.Transaction.AdoNetWithDistributedTransactionFactory.DistributedTransactionContext.System.Transactions.IEnlistmentNotification.Prepare(PreparingEnlistment preparingEnlistment)
